# For local development only
services:
  redis:
    image: redis:${REDIS_APP_VERSION}
    volumes: []
    tmpfs:
      - /dev/shm/redis
    command:
      - sh
      - -c
      - |
        mkdir -p /dev/shm/redis
        exec redis-server --appendonly no --dir /dev/shm/redis --dbfilename dump.rdb
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 10
    restart: unless-stopped

  web:
    image: loltierlist-web:dev
    build:
      context: .
      dockerfile: src/Web/Dockerfile
    pull_policy: never
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      Redis__ConnectionString: "redis:6379"
    ports: ["${WEB_PORT}:8080"]
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  worker:
    image: loltierlist-worker:dev
    build:
      context: .
      dockerfile: src/Worker/Dockerfile
    pull_policy: never
    environment:
      DOTNET_ENVIRONMENT: "Development"
      Redis__ConnectionString: "redis:6379"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  redisinsight:
    image: redis/redisinsight:2.70
    ports:
      - "5540:5540"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./.devdata/redisinsight:/data
    restart: unless-stopped
    environment:
      RI_REDIS_HOST: redis
      RI_REDIS_PORT: 6379